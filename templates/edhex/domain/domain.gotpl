package {{ parseToLower .Model }}

import (
	"{{ .ModuleName }}/model"
)

type UseCase interface {
	Create(m *model.{{ .Model }}) error
	Update(m *model.{{ .Model }}) error
	Delete(ID uint) error

	GetWhere(specification model.FiltersSpecification) (model.{{ .Model }}, error)
	GetAllWhere(specification model.FiltersSpecification) (model.{{ parseToUpperCamelCase .Table }}, error)
}

type Storage interface {
	GetTx() (model.Transaction, error)

	Create(m *model.{{ .Model }}) error
	Update(m *model.{{ .Model }}) error
	Delete(ID uint) error

	GetWhere(specification model.FiltersSpecification) (model.{{ .Model }}, error)
	GetAllWhere(specification model.FiltersSpecification) (model.{{ parseToUpperCamelCase .Table }}, error)
}
