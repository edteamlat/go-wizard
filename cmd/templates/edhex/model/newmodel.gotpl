{{ $slice := parseToUpperCamelCase .Table -}}
{{ $reciverName := getFirstLetter .Model -}}

package model

import (
	{{if eq .TimeType "time.Time"}}"time"{{end}}
	{{- if eq .IDType "uuid.UUID"}}"github.com/google/uuid"{{end}}
)

// {{ .Model }} model of table {{ .Table }}
type {{ .Model }} struct {
	{{range .Fields -}}
	{{ parseToUpperCamelCase .Name }} {{ .Type }} `json:"{{ .Name}}"`
	{{end -}}

}

func ({{ $reciverName }} {{ .Model }}) HasID() bool {
	{{if eq .IDType "uint" -}}
		return {{ $reciverName }}.ID > 0
	{{- else -}}
		return {{ $reciverName }}.ID.String() != "00000000-0000-0000-0000-000000000000"
	{{- end}}
}

func ({{ $reciverName }} {{ .Model }}) Validate() error {
	// implement validation of fields for creation and update
	return nil
}

// {{ $slice }} slice of {{ .Model }}
type {{ $slice }} []{{ .Model }}

func ({{ $reciverName }} {{ $slice }}) IsEmpty() bool { return len({{ $reciverName }}) == 0 }
